; PlatformIO Project Configuration File pour Raspberry Pi Pico
; Configuration adaptée pour reproduire l'environnement Arduino IDE
; avec le core Earlephilhower et les bibliothèques fonctionnelles

[env:pico]
platform = https://github.com/maxgerhardt/platform-raspberrypi.git
board = pico
framework = arduino
board_build.core = earlephilhower

; Configuration du système de fichiers LittleFS
board_build.filesystem_size = 512k
board_build.filesystem = littlefs

; Configuration CPU à 120MHz
board_build.f_cpu = 120000000L

; Build options optimisées pour RP2040
build_flags = 
    ; Configuration CPU
    -DF_CPU=120000000L
    
    ; TinyUSB et MIDI
    -DUSE_TINYUSB
    -DCFG_TUD_MIDI=1
    -DCFG_TUD_CDC=1
    -DENABLE_USB_MIDI
    
    ; Configuration TFT ILI9488 - essai configuration alternative
    -DUSER_SETUP_LOADED=1
    -DILI9488_DRIVER=1
    -DTFT_WIDTH=320
    -DTFT_HEIGHT=480
    ; -DTFT_INVERSION_OFF=1  ; Essayons sans cette directive
    
    ; Pins TFT configuration (correspondant à votre hardware)
    -DTFT_MISO=-1
    -DTFT_MOSI=7
    -DTFT_SCLK=6
    -DTFT_CS=5
    -DTFT_DC=8
    -DTFT_RST=9
    
    ; Configuration SPI alternative
    -DSPI_FREQUENCY=20000000  ; Réduire la fréquence
    -DTFT_BL=15
    -DTFT_BACKLIGHT_ON=HIGH
    
    ; Couleurs et initialisation
    -DTFT_BLACK=0x0000
    -DTFT_WHITE=0xFFFF
    -DTFT_RED=0xF800
    -DTFT_GREEN=0x07E0
    -DTFT_BLUE=0x001F
    
    ; Fonts TFT_eSPI
    -DLOAD_GLCD=1
    -DLOAD_FONT2=1
    -DLOAD_FONT4=1
    -DLOAD_FONT6=1
    -DLOAD_FONT7=1
    -DLOAD_FONT8=1
    -DLOAD_GFXFF=1
    -DSMOOTH_FONT=1
    
    ; Optimisations RP2040
    -DPICO_DEOPTIMIZED_DEBUG=1
; Serial Monitor options
monitor_speed = 115200

; Utiliser vos bibliothèques Arduino IDE existantes
lib_extra_dirs = 
    ~/Documents/Arduino/libraries
    ~/Arduino/libraries

; Exclure les bibliothèques problématiques avec RP2040
lib_ignore = 
    ; FastLED
    Adafruit_TinyUSB_Library
    ArduinoSTL
    UUID
    ; Adafruit NeoPixel à cause d'incompatibilité avec cette version du core

; Dépendances PlatformIO pour les fonctionnalités critiques
lib_deps = 
    ; MIDI USB avec TinyUSB
    adafruit/Adafruit TinyUSB Library@^3.1.4
    fortyseveneffects/MIDI Library@^5.0.2
    
    ; Display TFT
    bodmer/TFT_eSPI@^2.5.43
    
    ; LEDs NeoPixel compatible RP2040 - utiliser la version du core
    ; adafruit/Adafruit NeoPixel@^1.12.0
    
    ; JSON parsing
    bblanchon/ArduinoJson@^7.0.4
    
    ; Ethernet (si pas dans Arduino libs)
    arduino-libraries/Ethernet@^2.0.2
    
    ; OSC (si nécessaire)
    ; CNMAT/OSC

; Options de upload et debug
upload_protocol = picotool
debug_tool = cmsis-dap

; Configuration du filesystem - construction automatique avec le code
; extra_scripts = pre:scripts/build_filesystem.py
; Ajoutez cette ligne pour déclencher le script automatiquement
extra_scripts = post:scripts/merge_filesystem.py

; Environment pour la construction du filesystem uniquement
[env:pico_buildfs]
platform = ${env:pico.platform}
board = ${env:pico.board}
framework = ${env:pico.framework}
board_build.core = ${env:pico.board_build.core}
board_build.filesystem_size = ${env:pico.board_build.filesystem_size}
board_build.filesystem = ${env:pico.board_build.filesystem}
